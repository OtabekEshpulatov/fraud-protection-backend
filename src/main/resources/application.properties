app.url =  https://377c-151-73-238-241.ngrok-free.app
main.datasource.url=jdbc:postgresql://localhost:5432/fraud_protection
main.datasource.username=postgres
main.datasource.password=123

main.liquibase.change-log=com/otabekjan/fraud_protection/liquibase/changelog.xml

jmix.ui.login-view-id=LoginView
jmix.ui.main-view-id=MainView
jmix.ui.menu-config=/com/otabekjan/fraud_protection/menu.xml
jmix.ui.composite-menu=true
ui.login.defaultUsername=admin
ui.login.defaultPassword=admin
jmix.core.available-locales=en


# Launch the default browser when starting the application in development mode
vaadin.launch-browser=false
logging.level.org.atmosphere=warn
# 'debug' level logs SQL generated by EclipseLink ORM
logging.level.eclipselink.logging.sql=debug
# 'debug' level logs data store operations
logging.level.io.jmix.core.datastore=info
# 'debug' level logs access control constraints
logging.level.io.jmix.core.AccessLogger=debug
# 'debug' level logs all Jmix debug output
logging.level.io.jmix=info
# 'debug' or 'trace' levels help to troubleshoot security problems
logging.level.org.springframework.security=info
jmix.core.fetch-plans-config=com/otabekjan/fraud_protection/fetch-plans.xml

springdoc.api-docs.path=/api/docs

spring.http.multipart.max-file-size = 50MB

#rabbit-mq
spring.rabbitmq.host=localhost
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.template.exchange=fraud_shield
spring.rabbitmq.template.sms-queue=sms-queue
spring.rabbitmq.template.sms.routing-key=sms.routing-key
spring.rabbitmq.template.email-queue=email-queue
spring.rabbitmq.template.email.routing-key=email.routing-key
spring.rabbitmq.template.apns-queue=apns-queue
spring.rabbitmq.template.apns.routing-key=apns.routing-key

apns.bundleId=com.otabek.FraudProtection
apns.p12Password=8182040615Otabek@
apns.url=https://api.sandbox.push.apple.com


# set authorization-grant-types=password if you need only access_token to be returned,
# set authorization-grant-types=password,refresh_token if you also want a refresh token to be issued
spring.security.oauth2.authorizationserver.client.myclient.registration.authorization-grant-types=password,refresh_token


# myapp is a client id that you should pass in a basic authentication for the token endpoint
spring.security.oauth2.authorizationserver.client.myclient.registration.client-id=myapp

# mysecret is a client password that you should pass in a basic authentication for the token endpoint
spring.security.oauth2.authorizationserver.client.myclient.registration.client-secret={noop}mysecret


# this property indicates that client credentials (e.g. myapp, mysecret) must be passed in the Authorization header
spring.security.oauth2.authorizationserver.client.myclient.registration.client-authentication_methods=client_secret_basic

# use opaque tokens instead of JWT
spring.security.oauth2.authorizationserver.client.myclient.token.access-token-format=reference

# access token time to live
spring.security.oauth2.authorizationserver.client.myclient.token.access-token-time-to-live=1h

# refresh token time to live
spring.security.oauth2.authorizationserver.client.myclient.token.refresh-token-time-to-live=24h



jmix.resource-server.authenticated-url-patterns=/api/**
jmix.resource-server.anonymous-url-patterns=\
  /api/v1/registration,\
  /api/v1/posts/latest,\
  /api/v1/posts/*,\
  /api/v1/posts/get-similar,\
  /api/v1/regions,\
  /api/docs,\
  /web-posts/*,\
  /webmvc/**,\
  /swagger-ui/**,\
  /file/**

vaadin.exclude-urls=/swagger-ui/**,/api/docs
